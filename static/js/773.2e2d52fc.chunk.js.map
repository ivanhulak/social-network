{"version":3,"file":"static/js/773.2e2d52fc.chunk.js","mappings":"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","sources":["redux/selectors/users-selectors.ts","components/Users/UserItem/UserItem.tsx","common/Pagination/Paginator.tsx","components/Users/UsersSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersPage.tsx","../node_modules/classnames/index.js"],"sourcesContent":["import { AppStateType } from \"../redux-store\";\n\nexport const getUsers = (state: AppStateType) => {\n   return state.usersPage.users;\n}\nexport const getTotalItemsCount = (state: AppStateType) => {\n   return state.usersPage.totalItemsCount;\n}\nexport const getPageSize = (state: AppStateType) => {\n   return state.usersPage.pageSize;\n}\nexport const getCurrentPage = (state: AppStateType) => {\n   return state.usersPage.currentPage;\n}\nexport const getIsFetching = (state: AppStateType) => {\n   return state.usersPage.isFetching;\n}\nexport const getFollowingInProgress = (state: AppStateType) => {\n   return state.usersPage.followingInProgress;\n}\nexport const getFriends = (state: AppStateType) => {\n   return state.usersPage.friends;\n}\nexport const getFilterUsers = (state: AppStateType) => {\n   return state.usersPage.filter;\n}","import React from \"react\";\nimport userPhoto from './../../../assets/images/userPhoto.png'\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledUserItem = styled.div`\n  padding: 20px 10px;\n  max-width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  justify-self: center;\n  cursor: pointer;\n  border-radius: 20px;\n  overflow: hidden;\n  min-width: 200px;\n  min-height: 200px;\n  border: 1px solid transparent;\n  transition: all .4s ease;\n  &:hover {\n    border: 1px solid rgb(195, 195, 195);\n    background-color: ${({ theme }) => theme.additional};\n  }\n`;\nconst ItemImage = styled.div`\n  margin-bottom: 20px;\n  max-width: 100px;\n  max-height: 100px;\n  img{\n    max-width: 100%;\n  }\n`;\nconst ItemInfo = styled.div`\n  color: ${({ theme }) => theme.headersColor};\n  font-weight: 700;\n  font-size: 20px;\n  margin-bottom: 5px;\n  flex: 1 1 auto;\n`;\nconst FollowButton = styled.button`\n  background-color: #eee;\n  font-size: 20px;\n  border: 1px solid #000;\n  border-radius: 24px;\n  padding: 5px 15px;\n  cursor: pointer;\n  transition: ease 0.3s all;\n  &:hover {\n    background-color: #000;\n    color: #fff;\n  }\n  &:active {\n    background-color: #666;\n    color: #fff;\n    transform: translate(2px, 3px);\n  }\n`;\ntype PropsType = {\n  userId: number\n  userPhoto: string | null\n  userName: string\n  followed: boolean\n  followingInProgress: Array<number>\n  follow: (userId: number) => void\n  unfollow: (userId: number) => void\n}\nexport const UserItem: React.FC<PropsType> = (props) => {\n  return (\n    <StyledUserItem>\n      <ItemImage>\n        <Link to={'/profile/' + props.userId}>\n          <img src={props.userPhoto ? props.userPhoto : userPhoto} alt=\"User Avatar\" />\n        </Link>\n      </ItemImage>\n      <ItemInfo>\n        <div>{props.userName}</div>\n      </ItemInfo>\n      <div>\n        {props.followed\n          ? <FollowButton disabled={props.followingInProgress.some(id => id === props.userId)}\n              onClick={() => { props.unfollow(props.userId) }}>Unfollow</FollowButton>\n          : <FollowButton disabled={props.followingInProgress.some(id => id === props.userId)}\n              onClick={() => { props.follow(props.userId) }}>Follow</FollowButton>\n        }\n      </div>\n    </StyledUserItem>\n  );\n}\n","import React from 'react';\nimport { useState } from 'react';\nimport cn from 'classnames';\nimport { SimpleBtn } from '../Buttons/SimpleButton/SimpleBtn';\nimport styled from 'styled-components';\n\nconst StyledPages = styled.div`\n   .currentPage {\n      font-weight: 700;\n      background-color: rgb(136, 109, 245);\n      color: #fff;\n   }\n   .pageNumber {\n      color: ${({ theme }) => theme.BlackWhite};\n      font-size: 20px;\n      border: 1px solid ${({ theme }) => theme.paginationBtn};\n      border-radius: 24px;\n      padding: 5px 15px;\n      cursor: pointer;\n      transition: ease 0.3s all;\n      &:hover {\n         background-color: ${({ theme }) => theme.headersColor};\n         color: #fff;\n      }\n      &:active {\n         background-color: #666;\n         color: #fff;\n         transform: translate(2px, 3px);\n      }\n   }\n`;\ntype PropsType = {\n   totalItemsCount: number\n   pageSize: number\n   currentPage: number\n   onPageChanged: (pageNumber: number) => void\n   portionSize?: number\n}\nconst Paginator: React.FC<PropsType> = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\n   let pagesCount = Math.ceil(totalItemsCount / pageSize);\n   let portionCount = Math.ceil(pagesCount / portionSize);\n   let [portionNumber, setPortionNumber] = useState(1);\n   let leftBorderElement = (portionNumber - 1) * portionSize + 1\n   let rightBorderElement = portionNumber * portionSize;\n\n   let pages: Array<number> = []\n   for (let i = 1; i <= pagesCount; i++) {\n      pages.push(i);\n   }\n\n   return <>\n      {portionNumber > 1 && <SimpleBtn btn_text='Prev' onClickCallback={ () => { setPortionNumber(portionNumber - 1) } }/>}\n      {pages.filter(p => p >= leftBorderElement && p <= rightBorderElement).map(p => {\n         return (\n            <StyledPages key={p}>\n               <button onClick={() => { onPageChanged(p) }}\n                  className={cn({'currentPage': currentPage === p }, 'pageNumber')}>{p}</button>\n            </StyledPages>\n         );\n      })}\n      {portionNumber < portionCount && \n         <SimpleBtn btn_text='Next' onClickCallback={ () => { setPortionNumber(portionNumber + 1) } }/>}\n   </>\n}\n\nexport default Paginator;","import React from 'react';\nimport { Field, Formik } from \"formik\";\nimport { FilterType } from '../../redux/users-reducer';\nimport { useSelector } from 'react-redux';\nimport { AppStateType } from '../../redux/redux-store';\nimport styled from 'styled-components';\nimport loupe from '../../assets/icons/loupe.png';\n\nconst StyledSearchForm = styled.form`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 30px;\n    .inputTerm{\n        padding: 7px 10px 7px 40px;\n        border: none;\n        background: url(${loupe}) 10px center no-repeat;\n        background-color: rgb(227, 227, 227);\n        font-size: 18px;\n        border-radius: 24px;\n        transition: all .3s ease;\n        cursor: pointer;\n        border: 1px solid rgb(227, 227, 227);\n        &:hover {\n            background-color: ${({ theme }) => theme.usersSearch};\n            border: 1px solid rgb(136, 109, 245);\n        }\n        &:focus {\n            background-color: ${({ theme }) => theme.usersSearch};\n            outline: none;\n        }\n    }\n    .selectField{\n        width: 100%;\n        min-width: 15ch;\n        max-width: 30ch;\n        border: 1px solid var(--select-border);\n        border-radius: 0.25em;\n        padding: 0.25em 0.5em;\n        font-size: 1.25rem;\n        cursor: pointer;\n        line-height: 1.1;\n        background-color: #fff;\n        background-image: linear-gradient(to top, #f1f1f1, #fff 33%);\n        &:focus{\n            outline: none;\n        }\n    }\n`;\nconst SearchButton = styled.button`\n    font-size: 18px;\n    padding: 6px 15px;\n    border-radius: 10px;\n    background-color: rgb(227, 227, 227);\n    transition: .3s all ease;\n    border: 1px solid #eee;\n    cursor: pointer;\n    &:hover {\n        background-color: ${({ theme }) => theme.usersSearch};\n        border: 1px solid rgb(136, 109, 245);\n    }\n`;\ntype FriendType = 'true' | 'false' | 'null'\ntype FormType = {\n    term: string,\n    friend: FriendType\n}\ntype PropsType = {\n    onFilterChanged: (filter: FilterType) => void\n}\nconst UsersSearchForm: React.FC<PropsType> = React.memo(({ onFilterChanged }) => {\n    const filter = useSelector((state: AppStateType) => state.usersPage.filter)\n\n    const submit = (values: FormType, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) => {\n        const filter: FilterType = {\n            term: values.term,\n            friend: values.friend === 'null' ? null : (values.friend === 'true') ? true : false\n        }\n        onFilterChanged(filter);\n        setSubmitting(false);\n    }\n    return (\n        <Formik enableReinitialize={true}\n            initialValues={{ term: filter.term, friend: String(filter.friend) as FriendType }}\n            onSubmit={submit}>\n\n            {({ handleSubmit, isSubmitting, }) => (\n                <StyledSearchForm onSubmit={handleSubmit}>\n                    <Field type=\"text\" name=\"term\" className='inputTerm' />\n                    <Field as=\"select\" name=\"friend\" className='selectField'>\n                        <option value=\"null\">All Users</option>\n                        <option value=\"true\">Only friends</option>\n                        <option value=\"false\">Only not friends</option>\n                    </Field>\n                    <SearchButton type=\"submit\" disabled={isSubmitting}>Search</SearchButton>\n                </StyledSearchForm>\n            )}\n        </Formik>\n    );\n})\n\nexport default UsersSearchForm;","import React, { useEffect } from \"react\";\nimport { UserItem } from \"./UserItem/UserItem\";\nimport Paginator from '../../common/Pagination/Paginator';\nimport UsersSearchForm from \"./UsersSearchForm\";\nimport { FilterType, follow, requestUsers, unfollow } from \"../../redux/users-reducer\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport {\n    getCurrentPage, getFilterUsers, getFollowingInProgress,\n    getPageSize, getTotalItemsCount, getUsers\n} from \"../../redux/selectors/users-selectors\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledUsers = styled.div`\n    padding: 0px 20px;\n    .usersSearchForm{\n        margin-bottom: 30px;\n    }\n    .userItemsRow{\n        display: grid;\n        grid-template-columns: repeat(4, 1fr);\n        gap: 10px;\n        margin-bottom: 20px;\n    }\n    .paginationBlock{\n        display: flex;\n        justify-content: center;\n        gap: 10px;\n    }\n`;\nexport const Users: React.FC = () => {\n    const users = useSelector(getUsers)\n    const followingInProgress = useSelector(getFollowingInProgress)\n    const filter = useSelector(getFilterUsers)\n    const pageSize = useSelector(getPageSize)\n    const currentPage = useSelector(getCurrentPage)\n    const totalItemsCount = useSelector(getTotalItemsCount)\n    const navigate = useNavigate()\n    const [searchParams]: any = useSearchParams();\n    const dispatch: any = useDispatch()\n    \n    const followCallback = (userId: number) => {\n        dispatch(follow(userId))\n    }\n    const unfollowCallback = (userId: number) => {\n        dispatch(unfollow(userId))\n    }\n\n    useEffect(() => {\n        const searchParamsObj = Object.fromEntries([...searchParams]);\n        const {term, friend, page} = searchParamsObj\n        let actualPage = currentPage\n        let actualFilter = filter\n        if (page) actualPage = Number(searchParamsObj.page)\n        if (term) actualFilter = {...actualFilter, term: term}\n        switch(friend){\n            case 'null':\n                actualFilter = {...actualFilter, friend: null}\n                break\n            case 'true':\n                actualFilter = {...actualFilter, friend: true}\n                break\n            case 'false':\n                actualFilter = {...actualFilter, friend: false}\n                break\n        }\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    useEffect(() => {\n        navigate(`/users?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filter, currentPage])\n\n    const onPageChanged = (page: number) => {\n        dispatch(requestUsers(page, pageSize, filter))\n    }\n\n    const onFilterChanged = (filter: FilterType) => {\n        dispatch(requestUsers(1, pageSize, filter))\n    }\n\n    return (\n        <StyledUsers>\n            <div className='usersSearchForm'>\n                <UsersSearchForm onFilterChanged={onFilterChanged} />\n            </div>\n            <div className='userItemsRow'>\n                {users.map(u => <UserItem key={u.id} userId={u.id}\n                    userPhoto={u.photos.small}\n                    followed={u.followed}\n                    userName={u.name}\n                    followingInProgress={followingInProgress}\n                    follow={followCallback}\n                    unfollow={unfollowCallback}\n                    />)}\n            </div>\n            <div className='paginationBlock'>\n                <Paginator currentPage={currentPage} totalItemsCount={totalItemsCount}\n                    pageSize={pageSize} onPageChanged={onPageChanged} portionSize={10} />\n            </div>\n        </StyledUsers>\n    );\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {Preloader} from '../../common/Preloader/Preloader';\nimport { getIsFetching } from '../../redux/selectors/users-selectors';\nimport { Users } from './Users';\n\n\nconst UsersPage: React.FC = () => {\n   const isFetching = useSelector(getIsFetching)\n   return (\n      <>\n         {isFetching ? <Preloader /> : null}\n         <Users/>\n      </>\n   );\n}\n\nexport default UsersPage;","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["getUsers","state","usersPage","users","getTotalItemsCount","totalItemsCount","getPageSize","pageSize","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","getFilterUsers","filter","StyledUserItem","styled","theme","additional","ItemImage","ItemInfo","headersColor","FollowButton","UserItem","props","to","userId","src","userPhoto","alt","userName","followed","disabled","some","id","onClick","unfollow","follow","StyledPages","BlackWhite","paginationBtn","onPageChanged","portionSize","pagesCount","Math","ceil","portionCount","useState","portionNumber","setPortionNumber","leftBorderElement","rightBorderElement","pages","i","push","SimpleBtn","btn_text","onClickCallback","p","map","className","cn","StyledSearchForm","usersSearch","SearchButton","React","onFilterChanged","useSelector","enableReinitialize","initialValues","term","friend","String","onSubmit","values","setSubmitting","handleSubmit","isSubmitting","type","name","as","value","StyledUsers","Users","navigate","useNavigate","useSearchParams","searchParams","dispatch","useDispatch","followCallback","unfollowCallback","useEffect","searchParamsObj","Object","fromEntries","page","actualPage","actualFilter","Number","requestUsers","u","photos","small","Preloader","hasOwn","hasOwnProperty","classNames","classes","arguments","length","arg","argType","Array","isArray","inner","apply","toString","prototype","includes","key","call","join","module","exports","default"],"sourceRoot":""}